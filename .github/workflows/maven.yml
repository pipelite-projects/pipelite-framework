# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: ossrh
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: MAVEN_GPG_PRIVATE_KEY
        gpg-passphrase: MAVEN_GPG_PASSPHRASE
    - name: Add execution permission to Maven Wrapper script
      run: chmod +x ./mvnw
    - name: Build with Maven
      run: ./mvnw -B package --file pom.xml
    - name: Release
      if: >
          github.event_name != 'pull_request' &&
          github.ref_name == 'main' &&
          contains(github.event.head_commit.message, '[release]')
      run: |
          git config --global user.email "builds@pipelite.io"
          git config --global user.name "pipelite-builds"
          ./mvnw -B -DskipTests deploy
      env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PRIVATE_KEY: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
